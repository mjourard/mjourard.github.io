service: blog-api

frameworkVersion: '2'
variablesResolutionMode: 20210326

provider:
    name: aws
    runtime: go1.x
    lambdaHashingVersion: 20201221
    stage: ${env:STAGE, 'dev'}
    region: ${env:AWS_DEFAULT_REGION, 'us-east-2'}
    iam:
        role:
            statements:
                -   Effect: "Allow"
                    Action:
                        - "dynamodb:GetItem"
                        - "dynamodb:PutItem"
                        - "dynamodb:Query"
                        - "dynamodb:Scan"
                        - "dynamodb:UpdateItem"
                    Resource: ${ssm:${self:custom.SSM_PREFIX}/DYNAMO_TRACKING_TABLE_ARN}
    environment:
        DYNAMO_TRACKING_TABLE: ${ssm:${self:custom.SSM_PREFIX}/DYNAMO_TRACKING_TABLE}
        LOG_LEVEL: ${env:LOG_LEVEL, 'info'}
        STAGE: ${self:provider.stage}
    httpApi:
        payload: '1.0'
custom:
    SSM_PREFIX: /${env:STAGE}/${self:service}

package:
    patterns:
        - '!./**'
        - ./backend/server/src/bin/**

functions:
    hello:
        handler: backend/server/src/bin/page-load
        events:
            -   httpApi:
                    path: /page-load
                    method: get

#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
